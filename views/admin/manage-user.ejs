<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="/style/admin/admin.css">
    <link rel="stylesheet" href="/style/admin/admin-nav.css">

    <!-- <script defer src="/js/admin-scripts.js"></script> -->
    <title>Admin Dashboard</title>
</head>
    <!-- /////////navigation section //////// -->
   <%-include("../partials/admin-navbar")%>

        <main class="content">
            <header>
                <h1>User Management</h1>
                <input type="text" id="searchUser" class="search" placeholder="Search users...">
            </header>
            <section id="users">
        <table class="table-container">
            <thead>
                <tr>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Registered Date</th>
                    <th>Votes</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                 <% users.forEach(user => { %>
            <tr id="user-<%= user._id %>">
                <td><%= user.email %></td>
                <td><%= user.role %></td>
                <td><%= new Date(user.createdAt).toLocaleString("en-US", { 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric', 
                    hour: '2-digit', 
                    minute: '2-digit', 
                    second: '2-digit',
                    hour12: false // Set to true for 12-hour format
                }) %></td>
                <td><%= user.votes %></td>
                <td id="user-<%= user._id %>">
                    <a href="/admin/users/edit/<%=user._id%>"><button class="edit-btn">Edit</button></a>
                    <!-- <a href="/admin/users/delete/<%=user._id%>"><button class="delete-btn">Delete</button></a> -->
                      <button class="delete-btn" onclick="deleteUser('<%= user._id %>')">Delete</button>
                </td>
            </tr>
        <% }) %>
            </tbody>
          </table>
                <div class="pagination">
                    <button id="prevPage">Previous</button>
                    <span id="pageNumber">1</span>
                    <button id="nextPage">Next</button>
                </div>
            </section>
        </main>
    <script>
          document.querySelector('.toggle-btn').addEventListener('click', () => {
            document.querySelector('.sidebar').classList.toggle('active');
        });

           function toggleDarkMode() {
            document.body.classList.toggle('dark-mode');
        }

        ///////dropdown/////
 document.addEventListener("DOMContentLoaded", () => {
    const toggle = document.getElementById("dashboardDropdownToggle");
    const dropdown = document.querySelector(".dropdown");

    toggle.addEventListener("click", (e) => {
      e.preventDefault();
      dropdown.classList.toggle("open");
    });

    // Optional: close dropdown when clicking outside
    document.addEventListener("click", (e) => {
      if (!dropdown.contains(e.target)) {
        dropdown.classList.remove("open");
      }
    });
  });


async function deleteUser(id) {
    if (confirm("Are you sure you want to delete this user? This action cannot be undone!")) {
        const response = await fetch(`/admin/users/delete/${id}`, { method: "DELETE" });

        if (response.ok) {
            console.log("User deleted successfully:", id);
            document.getElementById("user-" + id).remove(); // Remove user row
        } else {
            alert("Failed to delete user.");
        }
    }
}

         const users = [
            { name: "John Doe", email: "john@example.com", role: "Admin" },
            { name: "Jane Smith", email: "jane@example.com", role: "User" },
            { name: "Alice Johnson", email: "alice@example.com", role: "User" },
        ];

        let rowsPerPage = 2;
        let currentPage = 1;
        let filteredUsers = [...users];

        function renderTable() {
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            const paginatedUsers = filteredUsers.slice(start, end);
            document.getElementById("pageNumber").innerText = currentPage;
            document.getElementById("prevPage").disabled = currentPage === 1;
            document.getElementById("nextPage").disabled = end >= filteredUsers.length;
        }

        document.getElementById("searchUser").addEventListener("input", (e) => {
            const searchTerm = e.target.value.toLowerCase();
            filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchTerm));
            currentPage = 1;
            renderTable();
        });

        document.getElementById("prevPage").addEventListener("click", () => { currentPage--; renderTable(); });
        document.getElementById("nextPage").addEventListener("click", () => { currentPage++; renderTable(); });
        renderTable();
    </script>
</body>
</html>

